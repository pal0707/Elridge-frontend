{"ast":null,"code":"import { required, email } from \"vuelidate/lib/validators\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"SignUp\",\n  components: {},\n  data() {\n    return {\n      email: \"\",\n      password: \"\"\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required\n    }\n  },\n  computed: {\n    ...mapGetters([\"SIGNED_USER\"]),\n    ...mapGetters(\"waitListModule\", [\"INVITED_USER_TOKEN\", \"SELECTED_ETHNICITY\", \"SELECTED_RECOMMENDATION\"]),\n    ...mapGetters(\"inviteModule\", [\"SIGN_UP_BY_EMAIL_ERROR\"])\n  },\n  methods: {\n    onSubmit() {\n      if (this.$v.$invalid) {\n        this.$v.$touch();\n        return;\n      }\n      const formData = {\n        email: this.email.toLowerCase(),\n        password: this.password\n      };\n      console.log(formData);\n      let token = localStorage.getItem(\"invite_token\");\n      let it = JSON.parse(token);\n      let waitlist_token = sessionStorage.getItem(\"waitlist_token\");\n      // waitlist_token\n      //     ? this.$store.dispatch('signUpByEmail', {\n      //    contact: this.email.toLowerCase(),\n      //    password: this.password,\n      //    token : waitlist_token\n      //  })\n      //     :\n      this.$store.dispatch(\"inviteModule/signUpViaEmail\", {\n        data: {\n          ...formData,\n          token: it ? it : null,\n          ethnicity: this.SELECTED_ETHNICITY.id,\n          recommendation: JSON.parse(JSON.stringify(this.SELECTED_RECOMMENDATION))\n        },\n        self: this\n      });\n    },\n    goTo() {\n      this.$router.back();\n    }\n  }\n};","map":{"version":3,"names":["required","email","mapGetters","name","components","data","password","validations","computed","methods","onSubmit","$v","$invalid","$touch","formData","toLowerCase","console","log","token","localStorage","getItem","it","JSON","parse","waitlist_token","sessionStorage","$store","dispatch","ethnicity","SELECTED_ETHNICITY","id","recommendation","stringify","SELECTED_RECOMMENDATION","self","goTo","$router","back"],"sources":["/home/vikas/deepak/myapp/src/views/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"sign-up-container\">\n    <div>\n      <Header />\n    </div>\n    <div class=\"container\">\n      <div class=\"content\">\n        <div class=\"backArrow\">\n          <button v-on:click=\"goTo\">\n            <img src=\"../../img/backbutton.svg\" alt=\"\" />\n          </button>\n        </div>\n        <div class=\"header\">\n          <div class=\"logo\">\n            <img\n              class=\"logo--mob\"\n              src=\"../../img/MAMA_LOGO_YELLOW.png\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"title\">Sign up with email.</div>\n        </div>\n        <form class=\"form\" @submit.prevent=\"onSubmit\">\n          <div class=\"fields\">\n            <div class=\"input-wrapper\">\n              <label>\n                <input\n                  v-model.trim=\"email\"\n                  placeholder=\"Email\"\n                  class=\"input\"\n                  type=\"text\"\n                  :style=\"email.length ? 'text-transform: lowercase' : ''\"\n                />\n              </label>\n              <div class=\"input-icon\">\n                <img src=\"../../img/email.svg\" alt=\"\" />\n              </div>\n            </div>\n            <small\n              class=\"invalidMessage\"\n              v-if=\"$v.email.$dirty && !$v.email.required\"\n              >Email is required</small\n            >\n            <small\n              class=\"invalidMessage\"\n              v-if=\"$v.email.$dirty && !$v.email.email\"\n              >PLease enter a valid email</small\n            >\n            <small class=\"invalidMessage\" v-if=\"SIGN_UP_BY_EMAIL_ERROR\">{{\n              SIGN_UP_BY_EMAIL_ERROR\n            }}</small>\n            <div class=\"input-wrapper\">\n              <label>\n                <input\n                  v-model.trim=\"password\"\n                  :class=\"{\n                    invalid: $v.password.$dirty && !$v.password.required,\n                  }\"\n                  placeholder=\"Password\"\n                  class=\"input\"\n                  type=\"password\"\n                />\n              </label>\n              <div class=\"input-icon\">\n                <img src=\"../../img/password.svg\" alt=\"\" />\n              </div>\n            </div>\n            <small\n              class=\"invalidMessage\"\n              v-if=\"$v.password.$dirty && !$v.password.required\"\n              >Password is required</small\n            >\n          </div>\n          <div class=\"button\">\n            <button type=\"submit\">Sign up</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, email } from \"vuelidate/lib/validators\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"SignUp\",\n  components: {},\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  },\n  validations: {\n    email: { required, email },\n    password: { required },\n  },\n  computed: {\n    ...mapGetters([\"SIGNED_USER\"]),\n    ...mapGetters(\"waitListModule\", [\n      \"INVITED_USER_TOKEN\",\n      \"SELECTED_ETHNICITY\",\n      \"SELECTED_RECOMMENDATION\",\n    ]),\n    ...mapGetters(\"inviteModule\", [\"SIGN_UP_BY_EMAIL_ERROR\"]),\n  },\n  methods: {\n    onSubmit() {\n      if (this.$v.$invalid) {\n        this.$v.$touch();\n        return;\n      }\n      const formData = {\n        email: this.email.toLowerCase(),\n        password: this.password,\n      };\n      console.log(formData);\n      let token = localStorage.getItem(\"invite_token\");\n      let it = JSON.parse(token);\n      let waitlist_token = sessionStorage.getItem(\"waitlist_token\");\n      // waitlist_token\n      //     ? this.$store.dispatch('signUpByEmail', {\n      //    contact: this.email.toLowerCase(),\n      //    password: this.password,\n      //    token : waitlist_token\n      //  })\n      //     :\n      this.$store.dispatch(\"inviteModule/signUpViaEmail\", {\n        data: {\n          ...formData,\n          token: it ? it : null,\n          ethnicity: this.SELECTED_ETHNICITY.id,\n          recommendation: JSON.parse(\n            JSON.stringify(this.SELECTED_RECOMMENDATION)\n          ),\n        },\n        self: this,\n      });\n    },\n    goTo() {\n      this.$router.back();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.sign-up-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 0 auto;\n  position: relative;\n}\n\n.container {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n\n  .content {\n    width: 100%;\n    min-height: calc(100vh - 70px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n\n    .backArrow {\n      position: absolute;\n      top: 45px;\n      left: 30px;\n\n      button {\n        background: none;\n        outline: none;\n        border: none;\n        padding: 0;\n        img {\n          width: 16px;\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n      }\n\n      @media screen and (max-width: 414px) {\n        top: 30px;\n        left: 20px;\n      }\n    }\n\n    .header {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 45px;\n\n      .logo {\n        margin-bottom: 20px;\n        &--mob {\n          width: 180px;\n        }\n      }\n\n      .title {\n        font-family: \"Cooper Black\", sans-serif;\n        font-size: 22px;\n        color: #fecc2f;\n      }\n\n      @media screen and (max-height: 500px) {\n        margin-top: 80px;\n      }\n      @media screen and (max-width: 414px) {\n        top: 80px;\n        .title {\n          font-size: 21px;\n          line-height: 24px;\n        }\n      }\n    }\n\n    .form {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      padding-bottom: 70px;\n      max-width: 350px;\n      width: 100%;\n\n      .fields {\n        width: 100%;\n\n        .invalidMessage {\n          color: white;\n          font-family: \"Proxima Nova\", sans-serif;\n          font-size: 15px;\n        }\n\n        .input-wrapper {\n          display: flex;\n          width: 100%;\n          position: relative;\n\n          label {\n            width: 100%;\n            .input {\n              padding: 13px 0 13px 25px;\n              border: none;\n              border-bottom: solid 2px transparent;\n              background: none;\n              transition: 0.3s;\n              font-family: \"Proxima Nova\", sans-serif;\n              font-size: 18px;\n              color: #ffd800;\n              width: 100%;\n              border-radius: 0;\n\n              &:active,\n              &:focus {\n                transition: 0.3s;\n                outline: none;\n                border-bottom: solid 2px #ffcc00;\n              }\n\n              &:hover {\n                transition: 0.3s;\n                border-bottom: solid 2px #ffcc00;\n              }\n\n              &::placeholder {\n                font-family: \"Proxima Nova\", sans-serif;\n                font-size: 18px;\n                color: #ffd800;\n                opacity: 1;\n                transition: 0.3s;\n              }\n\n              &:focus::placeholder {\n                transition: 0.3s;\n                opacity: 0;\n              }\n            }\n          }\n          .input-icon {\n            position: absolute;\n            left: 0;\n            bottom: 16px;\n            img {\n              width: 17px;\n            }\n\n            @media screen and (max-width: 411px) {\n              top: 14px;\n            }\n          }\n\n          @media screen and (max-width: 414px) {\n            margin-bottom: 5px;\n          }\n        }\n      }\n\n      .button {\n        margin-top: 34px;\n        width: 100%;\n\n        button {\n          font-family: \"Proxima Nova\", sans-serif;\n          font-size: 18px;\n          height: 40px;\n          width: 100%;\n          outline: none;\n          border: none;\n          border-radius: 30px;\n          background: #ffcc00;\n          transition: 0.3s;\n          color: #fd3c1d;\n\n          &:active,\n          &:focus {\n            transition: 0.3s;\n            background-color: #fd3c1d;\n            color: #ffd800;\n          }\n\n          &:hover {\n            transition: 0.3s;\n            cursor: pointer;\n            background-color: #fd3c1d !important;\n            color: #ffd800;\n          }\n\n          @media screen and (max-width: 414px) {\n            height: 40px;\n            font-size: 17px;\n            line-height: 17px;\n          }\n\n          @media screen and (max-width: 320px) {\n            height: 40px;\n            font-size: 15px;\n            line-height: 15px;\n          }\n        }\n\n        @media screen and (max-width: 320px) {\n          width: 265px;\n        }\n      }\n\n      .links {\n        margin-top: 5px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        .link {\n          text-align: center;\n\n          a {\n            font-family: \"Montserrat\", sans-serif;\n            font-size: 12.5px;\n            font-weight: 400;\n            line-height: 12px;\n            text-decoration: none;\n            color: #ffd800;\n          }\n        }\n\n        .btn {\n          button {\n            outline: none;\n            background: none;\n            border: none;\n            font-family: \"Montserrat\", sans-serif;\n            font-size: 12.5px;\n            font-weight: 400;\n            line-height: 16px;\n            color: #ffd800;\n            padding: 0;\n\n            &:hover,\n            &:active,\n            &:focus {\n              cursor: pointer;\n            }\n          }\n        }\n\n        @media screen and (max-width: 414px) {\n          margin-top: 15px;\n\n          .link {\n            a {\n              font-size: 15.5px;\n            }\n          }\n          .btn {\n            button {\n              font-size: 15.5px;\n            }\n          }\n        }\n\n        @media screen and (max-width: 320px) {\n          margin-top: 15px;\n\n          .link {\n            a {\n              font-size: 14px;\n            }\n          }\n          .btn {\n            button {\n              font-size: 14px;\n            }\n          }\n        }\n      }\n    }\n\n    @media screen and (max-width: 562px) {\n      min-height: 100vh;\n    }\n\n    @media screen and (max-width: 414px) {\n      padding: 0 30px;\n    }\n  }\n}\n</style>"],"mappings":"AAmFA,SAASA,QAAQ,EAAEC,KAAI,QAAS,0BAA0B;AAC1D,SAASC,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,CAAC,CAAC;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLJ,KAAK,EAAE,EAAE;MACTK,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,WAAW,EAAE;IACXN,KAAK,EAAE;MAAED,QAAQ;MAAEC;IAAM,CAAC;IAC1BK,QAAQ,EAAE;MAAEN;IAAS;EACvB,CAAC;EACDQ,QAAQ,EAAE;IACR,GAAGN,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC;IAC9B,GAAGA,UAAU,CAAC,gBAAgB,EAAE,CAC9B,oBAAoB,EACpB,oBAAoB,EACpB,yBAAyB,CAC1B,CAAC;IACF,GAAGA,UAAU,CAAC,cAAc,EAAE,CAAC,wBAAwB,CAAC;EAC1D,CAAC;EACDO,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACC,EAAE,CAACC,QAAQ,EAAE;QACpB,IAAI,CAACD,EAAE,CAACE,MAAM,EAAE;QAChB;MACF;MACA,MAAMC,QAAO,GAAI;QACfb,KAAK,EAAE,IAAI,CAACA,KAAK,CAACc,WAAW,EAAE;QAC/BT,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACDU,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB,IAAII,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAChD,IAAIC,EAAC,GAAIC,IAAI,CAACC,KAAK,CAACL,KAAK,CAAC;MAC1B,IAAIM,cAAa,GAAIC,cAAc,CAACL,OAAO,CAAC,gBAAgB,CAAC;MAC7D;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAACM,MAAM,CAACC,QAAQ,CAAC,6BAA6B,EAAE;QAClDtB,IAAI,EAAE;UACJ,GAAGS,QAAQ;UACXI,KAAK,EAAEG,EAAC,GAAIA,EAAC,GAAI,IAAI;UACrBO,SAAS,EAAE,IAAI,CAACC,kBAAkB,CAACC,EAAE;UACrCC,cAAc,EAAET,IAAI,CAACC,KAAK,CACxBD,IAAI,CAACU,SAAS,CAAC,IAAI,CAACC,uBAAuB;QAE/C,CAAC;QACDC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC;IACDC,IAAIA,CAAA,EAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE;IACrB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}