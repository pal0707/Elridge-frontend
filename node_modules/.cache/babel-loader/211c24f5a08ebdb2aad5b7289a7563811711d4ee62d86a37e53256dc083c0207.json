{"ast":null,"code":"import { useVuelidate } from \"@vuelidate/core\";\nimport { required, email } from \"@vuelidate/validators\";\nexport default {\n  name: \"SignUp\",\n  components: {},\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data() {\n    return {\n      email: \"\",\n      password: {\n        password: \"\",\n        confirm: \"\"\n      }\n    };\n  },\n  validations: {\n    email: {\n      required,\n      email\n    },\n    password: {\n      required\n    }\n  },\n  computed: {},\n  methods: {\n    onSubmit() {\n      if (this.$v.$invalid) {\n        this.$v.$touch();\n        return;\n      }\n      const formData = {\n        email: this.email.toLowerCase(),\n        password: this.password\n      };\n      console.log(formData);\n      //   let token = localStorage.getItem(\"invite_token\");\n      //   let it = JSON.parse(token);\n      //   let waitlist_token = sessionStorage.getItem(\"waitlist_token\");\n      //   this.$store.dispatch(\"inviteModule/signUpViaEmail\", {\n      //     data: {\n      //       ...formData,\n      //       token: it ? it : null,\n      //       ethnicity: this.SELECTED_ETHNICITY.id,\n      //       recommendation: JSON.parse(\n      //         JSON.stringify(this.SELECTED_RECOMMENDATION)\n      //       ),\n      //     },\n      //     self: this,\n      //   });\n    },\n\n    goTo() {\n      this.$router.back();\n    }\n  }\n};","map":{"version":3,"names":["useVuelidate","required","email","name","components","setup","v$","data","password","confirm","validations","computed","methods","onSubmit","$v","$invalid","$touch","formData","toLowerCase","console","log","goTo","$router","back"],"sources":["/home/vikas/deepak/myapp/src/views/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"root\">\n    <h2>Create an Account</h2>\n    <p>\n      <input type=\"text\" placeholder=\"Email\" v-model=\"email\" />\n    </p>\n    <p>\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        v-model=\"password.password\"\n      />\n    </p>\n    <p>\n      <input\n        type=\"password\"\n        placeholder=\"Confirm Password\"\n        v-model=\"password.confirm\"\n      />\n    </p>\n    <button>Submit</button>\n  </div>\n</template>\n\n<script>\nimport { useVuelidate } from \"@vuelidate/core\";\nimport { required, email } from \"@vuelidate/validators\";\n\nexport default {\n  name: \"SignUp\",\n  components: {},\n  setup() {\n    return { v$: useVuelidate() };\n  },\n  data() {\n    return {\n      email: \"\",\n      password: {\n        password: \"\",\n        confirm: \"\",\n      },\n    };\n  },\n\n  validations: {\n    email: { required, email },\n    password: { required },\n  },\n  computed: {},\n  methods: {\n    onSubmit() {\n      if (this.$v.$invalid) {\n        this.$v.$touch();\n        return;\n      }\n      const formData = {\n        email: this.email.toLowerCase(),\n        password: this.password,\n      };\n      console.log(formData);\n      //   let token = localStorage.getItem(\"invite_token\");\n      //   let it = JSON.parse(token);\n      //   let waitlist_token = sessionStorage.getItem(\"waitlist_token\");\n      //   this.$store.dispatch(\"inviteModule/signUpViaEmail\", {\n      //     data: {\n      //       ...formData,\n      //       token: it ? it : null,\n      //       ethnicity: this.SELECTED_ETHNICITY.id,\n      //       recommendation: JSON.parse(\n      //         JSON.stringify(this.SELECTED_RECOMMENDATION)\n      //       ),\n      //     },\n      //     self: this,\n      //   });\n    },\n    goTo() {\n      this.$router.back();\n    },\n  },\n};\n</script>\n\n<style lang=\"css\">\n.root {\n  width: 400px;\n  margin: 0 auto;\n  background-color: #fff;\n  padding: 30px;\n  margin-top: 100px;\n  border-radius: 20px;\n}\ninput {\n  border: none;\n  outline: none;\n  border-bottom: 1px solid #ddd;\n  font-size: 1em;\n  padding: 5px 0;\n  margin: 10px 0 5px 0;\n  width: 100%;\n}\nbutton {\n  background-color: #3498db;\n  padding: 10px 20px;\n  margin-top: 10px;\n  border: none;\n  color: white;\n}\n</style>\n"],"mappings":"AAyBA,SAASA,YAAW,QAAS,iBAAiB;AAC9C,SAASC,QAAQ,EAAEC,KAAI,QAAS,uBAAuB;AAEvD,eAAe;EACbC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACN,OAAO;MAAEC,EAAE,EAAEN,YAAY;IAAG,CAAC;EAC/B,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLL,KAAK,EAAE,EAAE;MACTM,QAAQ,EAAE;QACRA,QAAQ,EAAE,EAAE;QACZC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EAEDC,WAAW,EAAE;IACXR,KAAK,EAAE;MAAED,QAAQ;MAAEC;IAAM,CAAC;IAC1BM,QAAQ,EAAE;MAAEP;IAAS;EACvB,CAAC;EACDU,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACC,EAAE,CAACC,QAAQ,EAAE;QACpB,IAAI,CAACD,EAAE,CAACE,MAAM,EAAE;QAChB;MACF;MACA,MAAMC,QAAO,GAAI;QACff,KAAK,EAAE,IAAI,CAACA,KAAK,CAACgB,WAAW,EAAE;QAC/BV,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACDW,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IACDI,IAAIA,CAAA,EAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE;IACrB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}